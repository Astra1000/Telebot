import requests
from pyrogram.types import Message

async def version_command(client, message: Message):
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º —Ä–µ–ª–∏–∑–µ
    try:
        api_url = REPO_URL.replace("github.com", "api.github.com/repos") + "/releases/latest"
        response = requests.get(api_url)
        if response.status_code == 200:
            release_data = response.json()
            latest_version = release_data["tag_name"]
            if latest_version.startswith('v'):
                latest_version = latest_version[1:]
        else:
            latest_version = None
    except:
        latest_version = None

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    message_text = f"‚ÑπÔ∏è **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏**\n\n"
    message_text += f"‚ñ∏ **–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è:** `{client.current_version}`\n"
    
    if latest_version:
        if latest_version == client.current_version:
            message_text += f"‚ñ∏ **–ü–æ—Å–ª–µ–¥–Ω—è—è –≤–µ—Ä—Å–∏—è:** `{latest_version}` (—É –≤–∞—Å –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)\n"
        else:
            message_text += f"‚ñ∏ **–î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ!**\n"
            message_text += f"‚ñ∏ **–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è:** `{latest_version}`\n\n"
            message_text += f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `.update` –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
    else:
        message_text += "‚ñ∏ –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è\n"
    
    message_text += f"\nüîó –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {REPO_URL}"
    
    await message.reply(message_text, disable_web_page_preview=True)

def register(handlers):
    handlers["version"] = version_command
    handlers["ver"] = version_command
    handlers["v"] = version_command
